/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
*/

import * as THREE from 'three'
import React, { useRef } from 'react'
import { useGLTF } from '@react-three/drei'
import { GLTF } from 'three-stdlib'

type GLTFResult = GLTF & {
  nodes: {
    BezierCurve: THREE.Mesh
    Cone: THREE.Mesh
    Cone001: THREE.Mesh
    Cone003: THREE.Mesh
    Cone002: THREE.Mesh
    Cube: THREE.Mesh
    Cube004: THREE.Mesh
    Cube008: THREE.Mesh
    Cube001: THREE.Mesh
    Cube005: THREE.Mesh
    Cube009: THREE.Mesh
    Cube003: THREE.Mesh
    Cube007: THREE.Mesh
    Cube011: THREE.Mesh
    Cube002: THREE.Mesh
    Cube006: THREE.Mesh
    Cube010: THREE.Mesh
    Sphere: THREE.Mesh
    Sphere001: THREE.Mesh
    Sphere002: THREE.Mesh
    Sphere003: THREE.Mesh
    Cylinder: THREE.Mesh
    Sphere004: THREE.Mesh
    Sphere005: THREE.Mesh
    Sphere006: THREE.Mesh
    Sphere007: THREE.Mesh
    Sphere008: THREE.Mesh
    Sphere009: THREE.Mesh
    Sphere010: THREE.Mesh
    Sphere011: THREE.Mesh
    Sphere012: THREE.Mesh
    Sphere013: THREE.Mesh
    Sphere014: THREE.Mesh
    Sphere015: THREE.Mesh
    Sphere016: THREE.Mesh
  }
  materials: {
    ['Material.001']: THREE.MeshStandardMaterial
    ['Material.006']: THREE.MeshStandardMaterial
    ['Material.004']: THREE.MeshStandardMaterial
    ['Material.005']: THREE.MeshStandardMaterial
    ['Material.003']: THREE.MeshStandardMaterial
    ['Material.002']: THREE.MeshStandardMaterial
  }
}

const Treehouse = (props: JSX.IntrinsicElements['group']) => {
  const { nodes, materials } = useGLTF('/models/treehouse-transformed.glb') as GLTFResult
  return (
    <group {...props} dispose={null}>
      <mesh castShadow receiveShadow geometry={nodes.BezierCurve.geometry} material={materials['Material.001']} position={[0, 0.57, 0]} />
      <mesh castShadow receiveShadow geometry={nodes.Cone.geometry} material={materials['Material.006']} position={[-1.08, 8.17, 0.37]} scale={0.26} />
      <mesh castShadow receiveShadow geometry={nodes.Cone001.geometry} material={materials['Material.004']} position={[6.95, 9.43, -1.8]} rotation={[0, 0.8, 0]} scale={0.31} />
      <mesh castShadow receiveShadow geometry={nodes.Cone003.geometry} material={materials['Material.004']} position={[1.78, 21.38, 2.18]} rotation={[-Math.PI / 2, 0, 0]} scale={0.11} />
      <mesh castShadow receiveShadow geometry={nodes.Cone002.geometry} material={materials['Material.005']} position={[3.92, 16.65, 1.24]} rotation={[-Math.PI, 1.48, -Math.PI]} scale={0.31} />
      <mesh castShadow receiveShadow geometry={nodes.Cube.geometry} material={materials['Material.003']} position={[-1.63, 8.74, -0.33]} scale={[1.38, 1, -0.07]} />
      <mesh castShadow receiveShadow geometry={nodes.Cube004.geometry} material={materials['Material.003']} position={[5.88, 10.11, -1.91]} rotation={[0, 0.8, 0]} scale={[1.65, 1.2, -0.09]} />
      <mesh castShadow receiveShadow geometry={nodes.Cube008.geometry} material={materials['Material.003']} position={[3.14, 17.33, 1.98]} rotation={[-Math.PI, 1.48, -Math.PI]} scale={[1.65, 1.2, -0.09]} />
      <mesh castShadow receiveShadow geometry={nodes.Cube001.geometry} material={materials['Material.003']} position={[-1.63, 7.63, 0.58]} rotation={[Math.PI / 2, 0, 0]} scale={[1.38, 1, -0.07]} />
      <mesh castShadow receiveShadow geometry={nodes.Cube005.geometry} material={materials['Material.003']} position={[6.66, 8.79, -1.15]} rotation={[Math.PI / 2, 0, -0.8]} scale={[1.65, 1.2, -0.09]} />
      <mesh castShadow receiveShadow geometry={nodes.Cube009.geometry} material={materials['Material.003']} position={[4.23, 16.01, 1.89]} rotation={[Math.PI / 2, 0, -1.66]} scale={[1.65, 1.2, -0.09]} />
      <mesh castShadow receiveShadow geometry={nodes.Cube003.geometry} material={materials['Material.004']} position={[-1.03, 8.05, 1.31]} scale={0.21} />
      <mesh castShadow receiveShadow geometry={nodes.Cube007.geometry} material={materials['Material.006']} position={[7.79, 9.28, -1.05]} rotation={[0, 0.8, 0]} scale={0.25} />
      <mesh castShadow receiveShadow geometry={nodes.Cube011.geometry} material={materials['Material.006']} position={[5.04, 16.5, 1.09]} rotation={[-Math.PI, 1.48, -Math.PI]} scale={0.25} />
      <mesh castShadow receiveShadow geometry={nodes.Cube002.geometry} material={materials['Material.003']} position={[-2.92, 8.73, 0.67]} rotation={[0, Math.PI / 2, 0]} scale={[0.9, 1, -0.07]} />
      <mesh castShadow receiveShadow geometry={nodes.Cube006.geometry} material={materials['Material.003']} position={[5.66, 10.11, 0.03]} rotation={[-Math.PI, 0.77, -Math.PI]} scale={[1.08, 1.2, -0.09]} />
      <mesh castShadow receiveShadow geometry={nodes.Cube010.geometry} material={materials['Material.003']} position={[4.47, 17.33, 3.41]} rotation={[-Math.PI, -0.09, -Math.PI]} scale={[1.08, 1.2, -0.09]} />
      <mesh castShadow receiveShadow geometry={nodes.Sphere.geometry} material={materials['Material.005']} position={[-1.99, 8.04, 0.61]} scale={0.27} />
      <mesh castShadow receiveShadow geometry={nodes.Sphere001.geometry} material={materials['Material.005']} position={[6.39, 9.28, -0.81]} rotation={[0, 0.8, 0]} scale={0.32} />
      <mesh castShadow receiveShadow geometry={nodes.Sphere002.geometry} material={materials['Material.004']} position={[4.31, 16.5, 2.31]} rotation={[-Math.PI, 1.48, -Math.PI]} scale={0.32} />
      <mesh castShadow receiveShadow geometry={nodes.Sphere003.geometry} material={materials['Material.006']} position={[1.78, 21.37, 2.52]} rotation={[-Math.PI, 1.48, -Math.PI]} scale={0.32} />
      <mesh castShadow receiveShadow geometry={nodes.Cylinder.geometry} material={materials['Material.004']} position={[0.04, 2.42, 3.02]} rotation={[Math.PI / 2, 0, 0]} scale={[1, 0.08, 1]} />
      <mesh castShadow receiveShadow geometry={nodes.Sphere004.geometry} material={materials['Material.002']} position={[-3.97, 13.07, 0.51]} scale={2} />
      <mesh castShadow receiveShadow geometry={nodes.Sphere005.geometry} material={materials['Material.002']} position={[-5.82, 11.52, 0.38]} scale={1.74} />
      <mesh castShadow receiveShadow geometry={nodes.Sphere006.geometry} material={materials['Material.002']} position={[-6.48, 14.25, 0.84]} scale={2.29} />
      <mesh castShadow receiveShadow geometry={nodes.Sphere007.geometry} material={materials['Material.002']} position={[-4.71, 12.85, -0.48]} scale={1.43} />
      <mesh castShadow receiveShadow geometry={nodes.Sphere008.geometry} material={materials['Material.002']} position={[17.78, 23.02, 2.28]} scale={3.15} />
      <mesh castShadow receiveShadow geometry={nodes.Sphere009.geometry} material={materials['Material.002']} position={[14.86, 20.58, 2.07]} scale={2.74} />
      <mesh castShadow receiveShadow geometry={nodes.Sphere010.geometry} material={materials['Material.002']} position={[11.1, 24.08, 2.1]} scale={3.61} />
      <mesh castShadow receiveShadow geometry={nodes.Sphere011.geometry} material={materials['Material.002']} position={[15.43, 25.66, 1.62]} scale={2.69} />
      <mesh castShadow receiveShadow geometry={nodes.Sphere012.geometry} material={materials['Material.002']} position={[15.54, 22.08, 0.35]} scale={1.92} />
      <mesh castShadow receiveShadow geometry={nodes.Sphere013.geometry} material={materials['Material.002']} position={[13.92, 10.2, -0.67]} scale={1.63} />
      <mesh castShadow receiveShadow geometry={nodes.Sphere014.geometry} material={materials['Material.002']} position={[12.34, 9.56, -1.05]} scale={1.1} />
      <mesh castShadow receiveShadow geometry={nodes.Sphere015.geometry} material={materials['Material.002']} position={[-2.04, 18.81, 0.84]} scale={3.43} />
      <mesh castShadow receiveShadow geometry={nodes.Sphere016.geometry} material={materials['Material.002']} position={[-1.05, 22.15, 0.84]} scale={1.24} />
    </group>
  )
}

useGLTF.preload('/models/treehouse-transformed.glb')

export default Treehouse;
